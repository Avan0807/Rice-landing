<section id="thanh-phan" class="ingredients section">
    <div class="container">
        <!-- Section Header -->
        <div class="section-header">
            <h2 class="section-title">Th√†nh ph·∫ßn dinh d∆∞·ª°ng</h2>
            <p class="section-subtitle">
                9 lo·∫°i nguy√™n li·ªáu t·ª± nhi√™n ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ l∆∞·ª°ng, mang l·∫°i gi√° tr·ªã dinh d∆∞·ª°ng t·ªëi ∆∞u
            </p>
        </div>

        <!-- Main Ingredients Display -->
        <div class="ingredients-showcase">
            <!-- Central Product -->
            <div class="central-product" aria-label="S·∫£n ph·∫©m trung t√¢m">
                <div class="product-circle">
                    <div class="product-inner">
                        <div class="product-logo">TB</div>
                        <div class="product-text">B·ªòT G·∫†O L·ª®T</div>
                    </div>
                    <div class="rotating-ring" aria-hidden="true"></div>
                </div>

                <!-- Ingredient Lines connecting to center (t√≠nh theo g√≥c) -->
                @php
                    $hasIngredients = isset($ingredients) && is_array($ingredients) && count($ingredients) > 0;
                    $total = $hasIngredients ? count($ingredients) : 0;
                @endphp
                @if($hasIngredients)
                <div class="ingredient-lines" aria-hidden="true">
                    @for($i = 0; $i < $total; $i++)
                        @php
                            $deg = round(($i / max($total,1)) * 360);
                        @endphp
                        <div class="connect-line"
                            style="transform: translate(-50%, -100px) rotate({{ $deg }}deg)"></div>
                    @endfor
                </div>
                @endif
            </div>

            <!-- Ingredients Orbit -->
            <div class="ingredients-orbit" role="list">
                @if($hasIngredients)
                    @foreach($ingredients as $index => $ingredient)
                        @php
                            // T√≠nh to·∫° ƒë·ªô qu·ªπ ƒë·∫°o theo b√°n k√≠nh R (kh·ªõp CSS m·∫∑c ƒë·ªãnh)
                            $R = 250; // ƒë·ªïi cho desktop l·ªõn b·∫±ng @media trong CSS
                            $angle = 2 * M_PI * $index / max($total,1);
                            $x = round($R * cos($angle));
                            $y = round($R * sin($angle));
                            $deg = round(rad2deg($angle));
                            $name = $ingredient['name'] ?? 'Th√†nh ph·∫ßn';
                            $icon = $ingredient['icon'] ?? 'üåæ';
                            $desc = $ingredient['description'] ?? 'M√¥ t·∫£ th√†nh ph·∫ßn';
                        @endphp

                        <div id="ing-{{ $index + 1 }}"
                            class="ingredient-item"
                            role="listitem"
                            data-ingredient="{{ $index }}"
                            tabindex="0"
                            aria-label="Th√†nh ph·∫ßn {{ $name }}"
                            style="--x: {{ $x }}px; --y: {{ $y }}px; --angle: {{ $deg }}deg;">
                            <div class="ingredient-card">
                                <div class="ingredient-visual">
                                    <div class="ingredient-icon">{{ $icon }}</div>
                                    <div class="ingredient-image">
                                        <!-- Placeholder cho ·∫£nh nguy√™n li·ªáu -->
                                        <div class="image-placeholder" aria-hidden="true">
                                            <span class="placeholder-icon">{{ $icon }}</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="ingredient-info">
                                    <h4 class="ingredient-name">{{ $name }}</h4>
                                    <p class="ingredient-description">{{ $desc }}</p>

                                    <!-- Nutritional highlights -->
                                    <div class="nutrition-highlights">
                                        @switch($name)
                                            @case('G·∫°o l·ª©t')
                                                <span class="highlight-tag">Ch·∫•t x∆° cao</span>
                                                <span class="highlight-tag">Vitamin B</span>
                                                @break
                                            @case('ƒê·∫≠u g√†')
                                                <span class="highlight-tag">Protein</span>
                                                <span class="highlight-tag">Folate</span>
                                                @break
                                            @case('ƒê·∫≠u h√† lan')
                                                <span class="highlight-tag">Vitamin A</span>
                                                <span class="highlight-tag">Vitamin C</span>
                                                @break
                                            @case('ƒêi·ªÉm m·∫°ch')
                                                <span class="highlight-tag">Protein ho√†n ch·ªânh</span>
                                                @break
                                            @case('Y·∫øn m·∫°ch')
                                                <span class="highlight-tag">Beta-glucan</span>
                                                @break
                                            @case('H·∫°t sen')
                                                <span class="highlight-tag">Vitamin E</span>
                                                @break
                                            @case('√ì ch√≥')
                                                <span class="highlight-tag">Omega-3</span>
                                                @break
                                            @case('H·∫°nh nh√¢n')
                                                <span class="highlight-tag">Vitamin E</span>
                                                <span class="highlight-tag">Magie</span>
                                                @break
                                            @case('Macca')
                                                <span class="highlight-tag">Ch·∫•t b√©o t·ªët</span>
                                                @break
                                            @default
                                                <span class="highlight-tag">Dinh d∆∞·ª°ng</span>
                                        @endswitch
                                    </div>
                                </div>

                                <!-- Hover/Click Details -->
                                <div class="ingredient-details" aria-live="polite">
                                    <div class="details-content">
                                        <h5>Chi ti·∫øt dinh d∆∞·ª°ng</h5>
                                        @switch($name)
                                            @case('G·∫°o l·ª©t')
                                                <ul>
                                                    <li>Ch·∫•t x∆°: 3.5g/100g</li>
                                                    <li>Protein: 7.9g/100g</li>
                                                    <li>Vitamin B1, B3, B6</li>
                                                    <li>Mangan, Selenium</li>
                                                </ul>
                                                @break
                                            @case('ƒê·∫≠u g√†')
                                                <ul>
                                                    <li>Protein: 19.3g/100g</li>
                                                    <li>Ch·∫•t x∆°: 17.4g/100g</li>
                                                    <li>Folate: 557mcg/100g</li>
                                                    <li>S·∫Øt: 6.2mg/100g</li>
                                                </ul>
                                                @break
                                            @default
                                                <ul>
                                                    <li>Gi√†u vitamin v√† kho√°ng ch·∫•t</li>
                                                    <li>H·ªó tr·ª£ s·ª©c kh·ªèe t·ªïng th·ªÉ</li>
                                                    <li>T·ª± nhi√™n, kh√¥ng h√≥a ch·∫•t</li>
                                                </ul>
                                        @endswitch
                                    </div>
                                </div>
                            </div>
                        </div>
                    @endforeach
                @else
                    {{-- Fallback khi ch∆∞a c√≥ d·ªØ li·ªáu --}}
                    <div class="text-center text-gray-500">ƒêang c·∫≠p nh·∫≠t th√†nh ph·∫ßn‚Ä¶</div>
                @endif
            </div>
        </div>

        <!-- Nutritional Summary -->
        <div class="nutritional-summary">
            <h3 class="summary-title">B·∫£ng th√†nh ph·∫ßn dinh d∆∞·ª°ng</h3>
            <div class="summary-subtitle">Trong 100g s·∫£n ph·∫©m</div>

            <div class="nutrition-table">
                <div class="nutrition-row header">
                    <div class="nutrition-label">Th√†nh ph·∫ßn</div>
                    <div class="nutrition-value">Gi√° tr·ªã</div>
                    <div class="nutrition-benefit">L·ª£i √≠ch</div>
                </div>

                <div class="nutrition-row">
                    <div class="nutrition-label">
                        <span class="label-icon">‚ö°</span>
                        <span class="label-text">NƒÉng l∆∞·ª£ng</span>
                    </div>
                    <div class="nutrition-value">380 kcal</div>
                    <div class="nutrition-benefit">Cung c·∫•p nƒÉng l∆∞·ª£ng b·ªÅn v·ªØng</div>
                </div>

                <div class="nutrition-row">
                    <div class="nutrition-label">
                        <span class="label-icon">ü•©</span>
                        <span class="label-text">Protein</span>
                    </div>
                    <div class="nutrition-value">12.5g</div>
                    <div class="nutrition-benefit">X√¢y d·ª±ng v√† ph·ª•c h·ªìi c∆° b·∫Øp</div>
                </div>

                <div class="nutrition-row">
                    <div class="nutrition-label">
                        <span class="label-icon">üåæ</span>
                        <span class="label-text">Carbohydrate</span>
                    </div>
                    <div class="nutrition-value">68g</div>
                    <div class="nutrition-benefit">Ngu·ªìn nƒÉng l∆∞·ª£ng ch√≠nh</div>
                </div>

                <div class="nutrition-row">
                    <div class="nutrition-label">
                        <span class="label-icon">ü•ú</span>
                        <span class="label-text">Ch·∫•t b√©o</span>
                    </div>
                    <div class="nutrition-value">6.2g</div>
                    <div class="nutrition-benefit">Ch·∫•t b√©o t·ªët, Omega-3</div>
                </div>

                <div class="nutrition-row">
                    <div class="nutrition-label">
                        <span class="label-icon">üåø</span>
                        <span class="label-text">Ch·∫•t x∆°</span>
                    </div>
                    <div class="nutrition-value">8.5g</div>
                    <div class="nutrition-benefit">H·ªó tr·ª£ ti√™u h√≥a, no l√¢u</div>
                </div>

                <div class="nutrition-row highlight">
                    <div class="nutrition-label">
                        <span class="label-icon">üíä</span>
                        <span class="label-text">Vitamin & Kho√°ng ch·∫•t</span>
                    </div>
                    <div class="nutrition-value">ƒê·∫ßy ƒë·ªß</div>
                    <div class="nutrition-benefit">TƒÉng c∆∞·ªùng mi·ªÖn d·ªãch</div>
                </div>
            </div>
        </div>

        {{-- Processing Method --}}
        <section id="quy-trinh" class="processing-info">
            <h3 class="processing-title">Quy tr√¨nh ch·∫ø bi·∫øn</h3>

            @php
                // Ch·ªçn layout: '2x2' ho·∫∑c '1x4'
                $layout = $processLayout ?? '2x2';
                $layoutClass = $layout === '1x4' ? 'is-1x4' : 'is-2x2';

                // D·ªØ li·ªáu b∆∞·ªõc (fallback n·∫øu kh√¥ng truy·ªÅn t·ª´ controller)
                $steps = $processSteps ?? [
                    [
                        'no' => 1,
                        'icon' => 'üåæ',
                        'title' => 'Tuy·ªÉn ch·ªçn nguy√™n li·ªáu',
                        'desc' => 'Ch·ªçn l·ªçc g·∫°o l·ª©t v√† c√°c lo·∫°i h·∫°t ch·∫•t l∆∞·ª£ng cao, ƒë·∫°t ti√™u chu·∫©n h·ªØu c∆°.',
                    ],
                    [
                        'no' => 2,
                        'icon' => 'üî•',
                        'title' => 'Rang v√† s·∫•y kh√¥',
                        'desc' => 'Rang ·ªü nhi·ªát ƒë·ªô th√≠ch h·ª£p ƒë·ªÉ gi·ªØ nguy√™n dinh d∆∞·ª°ng v√† t·∫°o h∆∞∆°ng v·ªã t·ª± nhi√™n.',
                    ],
                    [
                        'no' => 3,
                        'icon' => '‚öôÔ∏è',
                        'title' => 'Nghi·ªÅn m·ªãn',
                        'desc' => 'S·ª≠ d·ª•ng c√¥ng ngh·ªá nghi·ªÅn hi·ªán ƒë·∫°i, t·∫°o ƒë·ªô m·ªãn ƒë·ªìng ƒë·ªÅu, d·ªÖ h√≤a tan.',
                    ],
                    [
                        'no' => 4,
                        'icon' => 'üì¶',
                        'title' => 'ƒê√≥ng g√≥i',
                        'desc' => 'ƒê√≥ng g√≥i trong m√¥i tr∆∞·ªùng v√¥ tr√πng, ƒë·∫£m b·∫£o v·ªá sinh v√† ch·∫•t l∆∞·ª£ng.',
                    ],
                ];
            @endphp

            <div class="process-steps {{ $layoutClass }}">
                @foreach ($steps as $i => $step)
                    <div class="process-step">
                        <div class="step-number">{{ $step['no'] ?? ($i + 1) }}</div>
                        <div class="step-content">
                            <div class="step-icon">{{ $step['icon'] ?? 'üîß' }}</div>
                            <h4 class="step-title">{{ $step['title'] ?? 'B∆∞·ªõc' }}</h4>
                            <p class="step-description">
                                {{ $step['desc'] ?? 'M√¥ t·∫£ b∆∞·ªõc...' }}
                            </p>
                        </div>
                    </div>
                @endforeach
            </div>
        </section>


        <!-- Quality Assurance -->
        <div class="quality-assurance">
            <div class="qa-content">
                <div class="qa-icon">üî¨</div>
                <h4 class="qa-title">Ki·ªÉm so√°t ch·∫•t l∆∞·ª£ng nghi√™m ng·∫∑t</h4>
                <p class="qa-description">
                    M·ªói l√¥ s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm tra t·∫°i ph√≤ng th√≠ nghi·ªám uy t√≠n,
                    ƒë·∫£m b·∫£o ƒë·∫°t ti√™u chu·∫©n an to√†n th·ª±c ph·∫©m VSATTP.
                </p>

                <div class="qa-certifications">
                    <div class="cert-badge">
                        <span class="cert-icon">‚úÖ</span>
                        <span class="cert-text">VSATTP</span>
                    </div>
                    <div class="cert-badge">
                        <span class="cert-icon">üåø</span>
                        <span class="cert-text">H·ªØu c∆°</span>
                    </div>
                    <div class="cert-badge">
                        <span class="cert-icon">üî¨</span>
                        <span class="cert-text">Ki·ªÉm ƒë·ªãnh</span>
                    </div>
                    <div class="cert-badge">
                        <span class="cert-icon">üìã</span>
                        <span class="cert-text">Ph√°p l√Ω</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
(() => {
  'use strict';

  const $  = (s, r=document) => r.querySelector(s);
  const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));
  const prefersReduced = matchMedia('(prefers-reduced-motion: reduce)').matches;

  /* ========= INGREDIENTS ========= */
  (function setupIngredients(){
    const section = $('.ingredients');
    if (!section) return;

    const items = $$('.ingredient-item', section);
    const center = $('.central-product', section);
    const ring   = $('.rotating-ring', section);

    const reveal = () => {
      center?.classList.add('animate-in');
      items.forEach((it, i) => {
        const run = () => it.classList.add('animate-in');
        prefersReduced ? run() : setTimeout(run, i * 100 + 200);
      });
      if (ring && !prefersReduced) ring.classList.add('rotating');
    };

    try {
      const io = new IntersectionObserver((es, obs) => {
        if (es.some(e => e.isIntersecting)) { reveal(); obs.disconnect(); }
      }, { threshold: 0.15, rootMargin: '0px 0px -10% 0px' });
      io.observe(section);
    } catch { reveal(); }

    // Hover/Click + line kh·ªõp theo th·ª© t·ª±
    let paused = false;

    items.forEach((it, i) => {
      const line = $('.ingredient-lines .connect-line:nth-child(' + (i+1) + ')', section);

      it.addEventListener('mouseenter', () => {
        it.classList.add('highlighted');
        line?.classList.add('active');
        paused = true;
        if (ring) ring.style.animationPlayState = 'paused';
      });

      it.addEventListener('mouseleave', () => {
        it.classList.remove('highlighted');
        line?.classList.remove('active');
        paused = false;
        if (ring) ring.style.animationPlayState = 'running';
      });

      it.addEventListener('click', (e) => {
        const isOpen = it.classList.contains('details-active');
        items.forEach(x => x.classList.remove('details-active'));
        if (!isOpen) it.classList.add('details-active');
        e.stopPropagation();
      });

      it.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); it.click(); }
        if (e.key === 'Escape') it.classList.remove('details-active');
      });
    });

    document.addEventListener('click', (e) => {
      if (!e.target.closest('.ingredient-item')) {
        items.forEach(x => x.classList.remove('details-active'));
      }
    });

    // Spotlight quay v√≤ng
    let idx = 0, timer = null;
    const tick = () => {
      const r = section.getBoundingClientRect();
      const visible = r.top < innerHeight - 40 && r.bottom > 40;
      if (!visible || paused) return;
      items.forEach(x => x.classList.remove('spotlight'));
      items[idx]?.classList.add('spotlight');
      idx = (idx + 1) % items.length;
    };
    const start = () => { if (!prefersReduced && !timer) timer = setInterval(tick, 3000); };
    const stop  = () => { if (timer) { clearInterval(timer); timer = null; } };

    start();
    document.addEventListener('visibilitychange', () => document.hidden ? stop() : start());
  })();

  /* ========= NUTRITION TABLE ========= */
  (function setupNutrition(){
    const table = $('.nutrition-table');
    if (!table) return;

    const rows = $$('.nutrition-row:not(.header)', table);

    const reveal = () => {
      rows.forEach((row, i) => {
        const run = () => row.classList.add('animate-in');
        prefersReduced ? run() : setTimeout(run, i * 120);
      });
    };

    try {
      const io = new IntersectionObserver((es, obs) => {
        if (es.some(e => e.isIntersecting)) { reveal(); obs.disconnect(); }
      }, { threshold: 0.12, rootMargin: '0px 0px -20% 0px' });
      io.observe(table);
    } catch { reveal(); }
  })();

  /* ========= PROCESS STEPS ========= */
  (function setupProcess(){
    const wrap = $('.process-steps');
    if (!wrap) return;

    const steps = $$('.process-step', wrap);

    const reveal = () => {
      steps.forEach((st, i) => {
        const run = () => st.classList.add('animate-in');
        prefersReduced ? run() : setTimeout(run, i * 200);
      });
    };

    try {
      const io = new IntersectionObserver((es, obs) => {
        if (es.some(e => e.isIntersecting)) { reveal(); obs.disconnect(); }
      }, { threshold: 0.2, rootMargin: '0px 0px -10% 0px' });
      io.observe(wrap);
    } catch { reveal(); }
  })();

})();
</script>
